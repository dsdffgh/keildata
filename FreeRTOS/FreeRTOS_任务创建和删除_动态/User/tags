!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	qualified	/Include an extra class-qualified tag entry for each tag/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	access	/Access (or export) of class members/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	inherits	/Inheritance information/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	language	/Language of input file containing tag/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	signature	/Signature of routine (e.g. prototype or parameter list)/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	p,prototype	/function prototypes/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	p,prototype	/function prototypes/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	D:/ProgramData/OneDrive - st.xatu.edu.cn/文档/Workspace/keildata/FreeRTOS/FreeRTOS_任务创建和删除_动态/User/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
BusFault_Handler	./stm32f1xx_it.c	/^void BusFault_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
BusFault_Handler	./stm32f1xx_it.h	/^void BusFault_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
DP83848_PHY_ADDRESS	./stm32f1xx_hal_conf.h	/^#define DP83848_PHY_ADDRESS /;"	d	language:C++
DebugMon_Handler	./stm32f1xx_it.c	/^void DebugMon_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
DebugMon_Handler	./stm32f1xx_it.h	/^void DebugMon_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
ETH_RXBUFNB	./stm32f1xx_hal_conf.h	/^#define ETH_RXBUFNB /;"	d	language:C++
ETH_RX_BUF_SIZE	./stm32f1xx_hal_conf.h	/^#define ETH_RX_BUF_SIZE /;"	d	language:C++
ETH_TXBUFNB	./stm32f1xx_hal_conf.h	/^#define ETH_TXBUFNB /;"	d	language:C++
ETH_TX_BUF_SIZE	./stm32f1xx_hal_conf.h	/^#define ETH_TX_BUF_SIZE /;"	d	language:C++
FREERTOS_CONFIG_H	./FreeRTOSConfig.h	/^#define FREERTOS_CONFIG_H$/;"	d	language:C++
HAL_ADC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_ADC_MODULE_ENABLED$/;"	d	language:C++
HAL_CAN_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_CAN_MODULE_ENABLED$/;"	d	language:C++
HAL_CEC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_CEC_MODULE_ENABLED$/;"	d	language:C++
HAL_CORTEX_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_CORTEX_MODULE_ENABLED$/;"	d	language:C++
HAL_CRC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_CRC_MODULE_ENABLED$/;"	d	language:C++
HAL_DAC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_DAC_MODULE_ENABLED$/;"	d	language:C++
HAL_DMA_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_DMA_MODULE_ENABLED$/;"	d	language:C++
HAL_ETH_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_ETH_MODULE_ENABLED$/;"	d	language:C++
HAL_EXTI_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_EXTI_MODULE_ENABLED$/;"	d	language:C++
HAL_FLASH_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_FLASH_MODULE_ENABLED$/;"	d	language:C++
HAL_GPIO_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_GPIO_MODULE_ENABLED$/;"	d	language:C++
HAL_HCD_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_HCD_MODULE_ENABLED$/;"	d	language:C++
HAL_I2C_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_I2C_MODULE_ENABLED$/;"	d	language:C++
HAL_I2S_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_I2S_MODULE_ENABLED$/;"	d	language:C++
HAL_IRDA_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_IRDA_MODULE_ENABLED$/;"	d	language:C++
HAL_IWDG_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_IWDG_MODULE_ENABLED$/;"	d	language:C++
HAL_MMC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_MMC_MODULE_ENABLED$/;"	d	language:C++
HAL_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_MODULE_ENABLED$/;"	d	language:C++
HAL_NAND_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_NAND_MODULE_ENABLED$/;"	d	language:C++
HAL_NOR_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_NOR_MODULE_ENABLED$/;"	d	language:C++
HAL_PCCARD_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_PCCARD_MODULE_ENABLED$/;"	d	language:C++
HAL_PCD_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_PCD_MODULE_ENABLED$/;"	d	language:C++
HAL_PWR_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_PWR_MODULE_ENABLED$/;"	d	language:C++
HAL_RCC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_RCC_MODULE_ENABLED$/;"	d	language:C++
HAL_RTC_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_RTC_MODULE_ENABLED$/;"	d	language:C++
HAL_SD_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_SD_MODULE_ENABLED$/;"	d	language:C++
HAL_SMARTCARD_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_SMARTCARD_MODULE_ENABLED$/;"	d	language:C++
HAL_SPI_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_SPI_MODULE_ENABLED$/;"	d	language:C++
HAL_SRAM_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_SRAM_MODULE_ENABLED$/;"	d	language:C++
HAL_TIM_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_TIM_MODULE_ENABLED$/;"	d	language:C++
HAL_UART_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_UART_MODULE_ENABLED$/;"	d	language:C++
HAL_USART_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_USART_MODULE_ENABLED$/;"	d	language:C++
HAL_WWDG_MODULE_ENABLED	./stm32f1xx_hal_conf.h	/^#define HAL_WWDG_MODULE_ENABLED$/;"	d	language:C++
HSE_STARTUP_TIMEOUT	./stm32f1xx_hal_conf.h	/^#define HSE_STARTUP_TIMEOUT /;"	d	language:C++
HSE_VALUE	./stm32f1xx_hal_conf.h	/^#define HSE_VALUE /;"	d	language:C++
HSI_VALUE	./stm32f1xx_hal_conf.h	/^#define HSI_VALUE /;"	d	language:C++
HardFault_Handler	./stm32f1xx_it.c	/^void HardFault_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
HardFault_Handler	./stm32f1xx_it.h	/^void HardFault_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
INCLUDE_eTaskGetState	./FreeRTOSConfig.h	/^#define INCLUDE_eTaskGetState /;"	d	language:C++
INCLUDE_uxTaskGetStackHighWaterMark	./FreeRTOSConfig.h	/^#define INCLUDE_uxTaskGetStackHighWaterMark /;"	d	language:C++
INCLUDE_uxTaskPriorityGet	./FreeRTOSConfig.h	/^#define INCLUDE_uxTaskPriorityGet /;"	d	language:C++
INCLUDE_vTaskDelay	./FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelay /;"	d	language:C++
INCLUDE_vTaskDelayUntil	./FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelayUntil /;"	d	language:C++
INCLUDE_vTaskDelete	./FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelete /;"	d	language:C++
INCLUDE_vTaskPrioritySet	./FreeRTOSConfig.h	/^#define INCLUDE_vTaskPrioritySet /;"	d	language:C++
INCLUDE_vTaskSuspend	./FreeRTOSConfig.h	/^#define INCLUDE_vTaskSuspend /;"	d	language:C++
INCLUDE_xEventGroupSetBitFromISR	./FreeRTOSConfig.h	/^#define INCLUDE_xEventGroupSetBitFromISR /;"	d	language:C++
INCLUDE_xResumeFromISR	./FreeRTOSConfig.h	/^#define INCLUDE_xResumeFromISR /;"	d	language:C++
INCLUDE_xTaskAbortDelay	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskAbortDelay /;"	d	language:C++
INCLUDE_xTaskGetCurrentTaskHandle	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskGetCurrentTaskHandle /;"	d	language:C++
INCLUDE_xTaskGetHandle	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskGetHandle /;"	d	language:C++
INCLUDE_xTaskGetIdleTaskHandle	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskGetIdleTaskHandle /;"	d	language:C++
INCLUDE_xTaskGetSchedulerState	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskGetSchedulerState /;"	d	language:C++
INCLUDE_xTaskResumeFromISR	./FreeRTOSConfig.h	/^#define INCLUDE_xTaskResumeFromISR /;"	d	language:C++
INCLUDE_xTimerPendFunctionCall	./FreeRTOSConfig.h	/^#define INCLUDE_xTimerPendFunctionCall /;"	d	language:C++
LSE_STARTUP_TIMEOUT	./stm32f1xx_hal_conf.h	/^#define LSE_STARTUP_TIMEOUT /;"	d	language:C++
LSE_VALUE	./stm32f1xx_hal_conf.h	/^#define LSE_VALUE /;"	d	language:C++
LSI_VALUE	./stm32f1xx_hal_conf.h	/^#define LSI_VALUE /;"	d	language:C++
MAC_ADDR0	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR0 /;"	d	language:C++
MAC_ADDR1	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR1 /;"	d	language:C++
MAC_ADDR2	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR2 /;"	d	language:C++
MAC_ADDR3	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR3 /;"	d	language:C++
MAC_ADDR4	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR4 /;"	d	language:C++
MAC_ADDR5	./stm32f1xx_hal_conf.h	/^#define MAC_ADDR5 /;"	d	language:C++
MemManage_Handler	./stm32f1xx_it.c	/^void MemManage_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
MemManage_Handler	./stm32f1xx_it.h	/^void MemManage_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
NMI_Handler	./stm32f1xx_it.c	/^void NMI_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
NMI_Handler	./stm32f1xx_it.h	/^void NMI_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
PHY_AUTONEGOTIATION	./stm32f1xx_hal_conf.h	/^#define PHY_AUTONEGOTIATION /;"	d	language:C++
PHY_AUTONEGO_COMPLETE	./stm32f1xx_hal_conf.h	/^#define PHY_AUTONEGO_COMPLETE /;"	d	language:C++
PHY_BCR	./stm32f1xx_hal_conf.h	/^#define PHY_BCR /;"	d	language:C++
PHY_BSR	./stm32f1xx_hal_conf.h	/^#define PHY_BSR /;"	d	language:C++
PHY_CONFIG_DELAY	./stm32f1xx_hal_conf.h	/^#define PHY_CONFIG_DELAY /;"	d	language:C++
PHY_DUPLEX_STATUS	./stm32f1xx_hal_conf.h	/^#define PHY_DUPLEX_STATUS /;"	d	language:C++
PHY_FULLDUPLEX_100M	./stm32f1xx_hal_conf.h	/^#define PHY_FULLDUPLEX_100M /;"	d	language:C++
PHY_FULLDUPLEX_10M	./stm32f1xx_hal_conf.h	/^#define PHY_FULLDUPLEX_10M /;"	d	language:C++
PHY_HALFDUPLEX_100M	./stm32f1xx_hal_conf.h	/^#define PHY_HALFDUPLEX_100M /;"	d	language:C++
PHY_HALFDUPLEX_10M	./stm32f1xx_hal_conf.h	/^#define PHY_HALFDUPLEX_10M /;"	d	language:C++
PHY_ISOLATE	./stm32f1xx_hal_conf.h	/^#define PHY_ISOLATE /;"	d	language:C++
PHY_JABBER_DETECTION	./stm32f1xx_hal_conf.h	/^#define PHY_JABBER_DETECTION /;"	d	language:C++
PHY_LINKED_STATUS	./stm32f1xx_hal_conf.h	/^#define PHY_LINKED_STATUS /;"	d	language:C++
PHY_LINK_INTERRUPT	./stm32f1xx_hal_conf.h	/^#define PHY_LINK_INTERRUPT /;"	d	language:C++
PHY_LINK_STATUS	./stm32f1xx_hal_conf.h	/^#define PHY_LINK_STATUS /;"	d	language:C++
PHY_LOOPBACK	./stm32f1xx_hal_conf.h	/^#define PHY_LOOPBACK /;"	d	language:C++
PHY_MICR	./stm32f1xx_hal_conf.h	/^#define PHY_MICR /;"	d	language:C++
PHY_MICR_INT_EN	./stm32f1xx_hal_conf.h	/^#define PHY_MICR_INT_EN /;"	d	language:C++
PHY_MICR_INT_OE	./stm32f1xx_hal_conf.h	/^#define PHY_MICR_INT_OE /;"	d	language:C++
PHY_MISR	./stm32f1xx_hal_conf.h	/^#define PHY_MISR /;"	d	language:C++
PHY_MISR_LINK_INT_EN	./stm32f1xx_hal_conf.h	/^#define PHY_MISR_LINK_INT_EN /;"	d	language:C++
PHY_POWERDOWN	./stm32f1xx_hal_conf.h	/^#define PHY_POWERDOWN /;"	d	language:C++
PHY_READ_TO	./stm32f1xx_hal_conf.h	/^#define PHY_READ_TO /;"	d	language:C++
PHY_RESET	./stm32f1xx_hal_conf.h	/^#define PHY_RESET /;"	d	language:C++
PHY_RESET_DELAY	./stm32f1xx_hal_conf.h	/^#define PHY_RESET_DELAY /;"	d	language:C++
PHY_RESTART_AUTONEGOTIATION	./stm32f1xx_hal_conf.h	/^#define PHY_RESTART_AUTONEGOTIATION /;"	d	language:C++
PHY_SPEED_STATUS	./stm32f1xx_hal_conf.h	/^#define PHY_SPEED_STATUS /;"	d	language:C++
PHY_SR	./stm32f1xx_hal_conf.h	/^#define PHY_SR /;"	d	language:C++
PHY_WRITE_TO	./stm32f1xx_hal_conf.h	/^#define PHY_WRITE_TO /;"	d	language:C++
PREFETCH_ENABLE	./stm32f1xx_hal_conf.h	/^#define  PREFETCH_ENABLE /;"	d	language:C++
PendSV_Handler	./stm32f1xx_it.c	/^void PendSV_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
PendSV_Handler	./stm32f1xx_it.h	/^void PendSV_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
SVC_Handler	./stm32f1xx_it.c	/^void SVC_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
SVC_Handler	./stm32f1xx_it.h	/^void SVC_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
SysTick_Handler	./stm32f1xx_it.c	/^void SysTick_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
SysTick_Handler	./stm32f1xx_it.h	/^void SysTick_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
TICK_INT_PRIORITY	./stm32f1xx_hal_conf.h	/^#define  TICK_INT_PRIORITY /;"	d	language:C++
USE_HAL_ADC_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_ADC_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_CAN_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_CAN_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_CEC_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_CEC_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_DAC_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_DAC_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_ETH_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_ETH_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_HCD_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_HCD_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_I2C_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_I2C_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_I2S_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_I2S_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_IRDA_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_IRDA_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_MMC_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_MMC_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_NAND_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_NAND_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_NOR_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_NOR_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_PCCARD_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_PCCARD_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_PCD_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_PCD_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_RTC_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_RTC_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_SD_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_SD_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_SMARTCARD_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_SMARTCARD_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_SPI_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_SPI_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_SRAM_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_SRAM_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_TIM_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_TIM_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_UART_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_UART_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_USART_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_USART_REGISTER_CALLBACKS /;"	d	language:C++
USE_HAL_WWDG_REGISTER_CALLBACKS	./stm32f1xx_hal_conf.h	/^#define  USE_HAL_WWDG_REGISTER_CALLBACKS /;"	d	language:C++
USE_RTOS	./stm32f1xx_hal_conf.h	/^#define  USE_RTOS /;"	d	language:C++
USE_SPI_CRC	./stm32f1xx_hal_conf.h	/^#define USE_SPI_CRC /;"	d	language:C++
UsageFault_Handler	./stm32f1xx_it.c	/^void UsageFault_Handler(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
UsageFault_Handler	./stm32f1xx_it.h	/^void UsageFault_Handler(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
VDD_VALUE	./stm32f1xx_hal_conf.h	/^#define  VDD_VALUE /;"	d	language:C++
__FREERTOS_DEMO_H	./freertos_demo.h	/^#define __FREERTOS_DEMO_H$/;"	d	language:C++
__STM32F1xx_HAL_CONF_H	./stm32f1xx_hal_conf.h	/^#define __STM32F1xx_HAL_CONF_H$/;"	d	language:C++
__STM32F1xx_IT_H	./stm32f1xx_it.h	/^#define __STM32F1xx_IT_H$/;"	d	language:C++
assert_failed	./stm32f1xx_hal_conf.h	/^void assert_failed(uint8_t* file, uint32_t line);$/;"	p	language:C++	typeref:typename:void	signature:(uint8_t * file,uint32_t line)
assert_param	./stm32f1xx_hal_conf.h	/^#define assert_param(/;"	d	language:C++	signature:(expr)
configAPPLICATION_ALLOCATED_HEAP	./FreeRTOSConfig.h	/^#define configAPPLICATION_ALLOCATED_HEAP /;"	d	language:C++
configASSERT	./FreeRTOSConfig.h	/^#define configASSERT(/;"	d	language:C++	signature:(x)
configCHECK_FOR_STACK_OVERFLOW	./FreeRTOSConfig.h	/^#define configCHECK_FOR_STACK_OVERFLOW /;"	d	language:C++
configCPU_CLOCK_HZ	./FreeRTOSConfig.h	/^#define configCPU_CLOCK_HZ /;"	d	language:C++
configENABLE_BACKWARD_COMPATIBILITY	./FreeRTOSConfig.h	/^#define configENABLE_BACKWARD_COMPATIBILITY /;"	d	language:C++
configGENERATE_RUN_TIME_STATS	./FreeRTOSConfig.h	/^#define configGENERATE_RUN_TIME_STATS /;"	d	language:C++
configIDLE_SHOULD_YIELD	./FreeRTOSConfig.h	/^#define configIDLE_SHOULD_YIELD /;"	d	language:C++
configKERNEL_INTERRUPT_PRIORITY	./FreeRTOSConfig.h	/^#define configKERNEL_INTERRUPT_PRIORITY /;"	d	language:C++
configLIBRARY_LOWEST_INTERRUPT_PRIORITY	./FreeRTOSConfig.h	/^#define configLIBRARY_LOWEST_INTERRUPT_PRIORITY /;"	d	language:C++
configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY	./FreeRTOSConfig.h	/^#define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY /;"	d	language:C++
configMAX_API_CALL_INTERRUPT_PRIORITY	./FreeRTOSConfig.h	/^#define configMAX_API_CALL_INTERRUPT_PRIORITY /;"	d	language:C++
configMAX_CO_ROUTINE_PRIORITIES	./FreeRTOSConfig.h	/^#define configMAX_CO_ROUTINE_PRIORITIES                 2                       \/* 定义协程/;"	d	language:C++
configMAX_PRIORITIES	./FreeRTOSConfig.h	/^#define configMAX_PRIORITIES                            32                      \/* 定义最大/;"	d	language:C++
configMAX_SYSCALL_INTERRUPT_PRIORITY	./FreeRTOSConfig.h	/^#define configMAX_SYSCALL_INTERRUPT_PRIORITY /;"	d	language:C++
configMAX_TASK_NAME_LEN	./FreeRTOSConfig.h	/^#define configMAX_TASK_NAME_LEN /;"	d	language:C++
configMESSAGE_BUFFER_LENGTH_TYPE	./FreeRTOSConfig.h	/^#define configMESSAGE_BUFFER_LENGTH_TYPE /;"	d	language:C++
configMINIMAL_STACK_SIZE	./FreeRTOSConfig.h	/^#define configMINIMAL_STACK_SIZE /;"	d	language:C++
configNUM_THREAD_LOCAL_STORAGE_POINTERS	./FreeRTOSConfig.h	/^#define configNUM_THREAD_LOCAL_STORAGE_POINTERS /;"	d	language:C++
configPRIO_BITS	./FreeRTOSConfig.h	/^    #define configPRIO_BITS /;"	d	language:C++
configQUEUE_REGISTRY_SIZE	./FreeRTOSConfig.h	/^#define configQUEUE_REGISTRY_SIZE /;"	d	language:C++
configSTACK_ALLOCATION_FROM_SEPARATE_HEAP	./FreeRTOSConfig.h	/^#define configSTACK_ALLOCATION_FROM_SEPARATE_HEAP /;"	d	language:C++
configSTACK_DEPTH_TYPE	./FreeRTOSConfig.h	/^#define configSTACK_DEPTH_TYPE /;"	d	language:C++
configSUPPORT_DYNAMIC_ALLOCATION	./FreeRTOSConfig.h	/^#define configSUPPORT_DYNAMIC_ALLOCATION /;"	d	language:C++
configSUPPORT_STATIC_ALLOCATION	./FreeRTOSConfig.h	/^#define configSUPPORT_STATIC_ALLOCATION /;"	d	language:C++
configSYSTICK_CLOCK_HZ	./FreeRTOSConfig.h	/^#define configSYSTICK_CLOCK_HZ /;"	d	language:C++
configTASK_NOTIFICATION_ARRAY_ENTRIES	./FreeRTOSConfig.h	/^#define configTASK_NOTIFICATION_ARRAY_ENTRIES /;"	d	language:C++
configTICK_RATE_HZ	./FreeRTOSConfig.h	/^#define configTICK_RATE_HZ /;"	d	language:C++
configTIMER_QUEUE_LENGTH	./FreeRTOSConfig.h	/^#define configTIMER_QUEUE_LENGTH /;"	d	language:C++
configTIMER_TASK_PRIORITY	./FreeRTOSConfig.h	/^#define configTIMER_TASK_PRIORITY /;"	d	language:C++
configTIMER_TASK_STACK_DEPTH	./FreeRTOSConfig.h	/^#define configTIMER_TASK_STACK_DEPTH /;"	d	language:C++
configTOTAL_HEAP_SIZE	./FreeRTOSConfig.h	/^#define configTOTAL_HEAP_SIZE /;"	d	language:C++
configUSE_16_BIT_TICKS	./FreeRTOSConfig.h	/^#define configUSE_16_BIT_TICKS /;"	d	language:C++
configUSE_ALTERNATIVE_API	./FreeRTOSConfig.h	/^#define configUSE_ALTERNATIVE_API /;"	d	language:C++
configUSE_COUNTING_SEMAPHORES	./FreeRTOSConfig.h	/^#define configUSE_COUNTING_SEMAPHORES /;"	d	language:C++
configUSE_CO_ROUTINES	./FreeRTOSConfig.h	/^#define configUSE_CO_ROUTINES /;"	d	language:C++
configUSE_DAEMON_TASK_STARTUP_HOOK	./FreeRTOSConfig.h	/^#define configUSE_DAEMON_TASK_STARTUP_HOOK /;"	d	language:C++
configUSE_IDLE_HOOK	./FreeRTOSConfig.h	/^#define configUSE_IDLE_HOOK /;"	d	language:C++
configUSE_MALLOC_FAILED_HOOK	./FreeRTOSConfig.h	/^#define configUSE_MALLOC_FAILED_HOOK /;"	d	language:C++
configUSE_MUTEXES	./FreeRTOSConfig.h	/^#define configUSE_MUTEXES /;"	d	language:C++
configUSE_NEWLIB_REENTRANT	./FreeRTOSConfig.h	/^#define configUSE_NEWLIB_REENTRANT /;"	d	language:C++
configUSE_PORT_OPTIMISED_TASK_SELECTION	./FreeRTOSConfig.h	/^#define configUSE_PORT_OPTIMISED_TASK_SELECTION /;"	d	language:C++
configUSE_PREEMPTION	./FreeRTOSConfig.h	/^#define configUSE_PREEMPTION /;"	d	language:C++
configUSE_QUEUE_SETS	./FreeRTOSConfig.h	/^#define configUSE_QUEUE_SETS /;"	d	language:C++
configUSE_RECURSIVE_MUTEXES	./FreeRTOSConfig.h	/^#define configUSE_RECURSIVE_MUTEXES /;"	d	language:C++
configUSE_STATS_FORMATTING_FUNCTIONS	./FreeRTOSConfig.h	/^#define configUSE_STATS_FORMATTING_FUNCTIONS /;"	d	language:C++
configUSE_TASK_NOTIFICATIONS	./FreeRTOSConfig.h	/^#define configUSE_TASK_NOTIFICATIONS /;"	d	language:C++
configUSE_TICKLESS_IDLE	./FreeRTOSConfig.h	/^#define configUSE_TICKLESS_IDLE /;"	d	language:C++
configUSE_TICK_HOOK	./FreeRTOSConfig.h	/^#define configUSE_TICK_HOOK /;"	d	language:C++
configUSE_TIMERS	./FreeRTOSConfig.h	/^#define configUSE_TIMERS /;"	d	language:C++
configUSE_TIME_SLICING	./FreeRTOSConfig.h	/^#define configUSE_TIME_SLICING /;"	d	language:C++
configUSE_TRACE_FACILITY	./FreeRTOSConfig.h	/^#define configUSE_TRACE_FACILITY /;"	d	language:C++
freertos_demo	./freertos_demo.c	/^void freertos_demo(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
freertos_demo	./freertos_demo.h	/^void freertos_demo(void);$/;"	p	language:C++	typeref:typename:void	signature:(void)
main	./main.c	/^int main(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
portCONFIGURE_TIMER_FOR_RUN_TIME_STATS	./FreeRTOSConfig.h	/^#define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS(/;"	d	language:C++	signature:()
portGET_RUN_TIME_COUNTER_VALUE	./FreeRTOSConfig.h	/^#define portGET_RUN_TIME_COUNTER_VALUE(/;"	d	language:C++	signature:()
vAssertCalled	./FreeRTOSConfig.h	/^#define vAssertCalled(/;"	d	language:C++	signature:(char,int)
vPortSVCHandler	./FreeRTOSConfig.h	/^#define vPortSVCHandler /;"	d	language:C++
xPortPendSVHandler	./FreeRTOSConfig.h	/^#define xPortPendSVHandler /;"	d	language:C++
